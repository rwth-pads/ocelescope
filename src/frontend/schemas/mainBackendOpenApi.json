{
  "openapi": "3.1.0",
  "info": { "title": "OCEAn", "version": "0.9.12" },
  "paths": {
    "/ocelot/events": {
      "get": {
        "tags": ["ocelot"],
        "summary": "Get Events",
        "operationId": "ocelot_paginatedEvents",
        "parameters": [
          {
            "name": "activity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Activity name",
              "title": "Activity"
            },
            "description": "Activity name"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Sort By"
            }
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Ascending"
            }
          },
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PaginatedResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocelot/objects": {
      "get": {
        "tags": ["ocelot"],
        "summary": "Get Objects",
        "operationId": "ocelot_paginatedObjects",
        "parameters": [
          {
            "name": "object_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Object type name",
              "title": "Object Type"
            },
            "description": "Object type name"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Sort By"
            }
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Ascending"
            }
          },
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PaginatedResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocelot/objects/changes/{object_id}": {
      "get": {
        "tags": ["ocelot"],
        "summary": "Get Object Changes",
        "operationId": "ocelot_getObjectChanges",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Object Id" }
          },
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocelot/objectInfo": {
      "get": {
        "tags": ["ocelot"],
        "summary": "Get Objects Info",
        "operationId": "ocelot_objectInfo",
        "parameters": [
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "string" },
                  "title": "Response Ocelot Objectinfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocelot/eventInfo": {
      "get": {
        "tags": ["ocelot"],
        "summary": "Get Event Info",
        "operationId": "ocelot_eventInfo",
        "parameters": [
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "string" },
                  "title": "Response Ocelot Eventinfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/session/logout": {
      "post": {
        "tags": ["session"],
        "summary": "Deletes the Session",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/ocels/": {
      "get": {
        "tags": ["ocels"],
        "summary": "List uploaded and uploading OCELs",
        "description": "Returns metadata for all uploaded OCELs along with any OCEL files currently being imported. Includes the ID of the currently active OCEL, if one is selected.",
        "operationId": "getOcels",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OcelListResponse" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ocels"],
        "summary": "Set Filter",
        "operationId": "setFilters",
        "parameters": [
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Filter" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/ocel": {
      "post": {
        "tags": ["ocels"],
        "summary": "Set the current active OCEL",
        "description": "Sets the active OCEL to the one with the provided `ocel_id`. Subsequent operations may use this as the default OCEL context.",
        "operationId": "setCurrentOcel",
        "parameters": [
          {
            "name": "ocel_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Ocel Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/ocel/delete": {
      "post": {
        "tags": ["ocels"],
        "summary": "Delete an uploaded OCEL",
        "description": "Deletes the uploaded OCEL with the given `ocel_id`. This action is irreversible and removes the OCEL from the session.",
        "operationId": "deleteOcel",
        "parameters": [
          {
            "name": "ocel_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Ocel Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/ocel/rename": {
      "post": {
        "tags": ["ocels"],
        "summary": "Rename an uploaded OCEL",
        "description": "Renames the OCEL represented by the given `ApiOcel` object to `new_name`. This updates the display name used in the UI and metadata.",
        "operationId": "renameOcel",
        "parameters": [
          {
            "name": "new_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "New Name" }
          },
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/objects/attributes": {
      "get": {
        "tags": ["ocels"],
        "summary": "Get Object Attributes",
        "operationId": "objectAttributes",
        "parameters": [
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        { "$ref": "#/components/schemas/IntegerAttribute" },
                        { "$ref": "#/components/schemas/FloatAttribute" },
                        { "$ref": "#/components/schemas/BooleanAttribute" },
                        { "$ref": "#/components/schemas/DateAttribute" },
                        { "$ref": "#/components/schemas/NominalAttribute" }
                      ],
                      "discriminator": {
                        "propertyName": "type",
                        "mapping": {
                          "integer": "#/components/schemas/IntegerAttribute",
                          "float": "#/components/schemas/FloatAttribute",
                          "boolean": "#/components/schemas/BooleanAttribute",
                          "date": "#/components/schemas/DateAttribute",
                          "nominal": "#/components/schemas/NominalAttribute"
                        }
                      }
                    }
                  },
                  "title": "Response Objectattributes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/events/attributes": {
      "get": {
        "tags": ["ocels"],
        "summary": "Get Event Attributes",
        "operationId": "eventAttributes",
        "parameters": [
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        { "$ref": "#/components/schemas/IntegerAttribute" },
                        { "$ref": "#/components/schemas/FloatAttribute" },
                        { "$ref": "#/components/schemas/BooleanAttribute" },
                        { "$ref": "#/components/schemas/DateAttribute" },
                        { "$ref": "#/components/schemas/NominalAttribute" }
                      ],
                      "discriminator": {
                        "propertyName": "type",
                        "mapping": {
                          "integer": "#/components/schemas/IntegerAttribute",
                          "float": "#/components/schemas/FloatAttribute",
                          "boolean": "#/components/schemas/BooleanAttribute",
                          "date": "#/components/schemas/DateAttribute",
                          "nominal": "#/components/schemas/NominalAttribute"
                        }
                      }
                    }
                  },
                  "title": "Response Eventattributes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/events/counts": {
      "get": {
        "tags": ["ocels"],
        "summary": "Get Event Counts",
        "operationId": "eventCounts",
        "parameters": [
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { "type": "integer" },
                  "title": "Response Eventcounts"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/events/time": {
      "get": {
        "tags": ["ocels"],
        "summary": "Get Time Info",
        "operationId": "timeInfo",
        "parameters": [
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Entity_Time_Info" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/objects/counts": {
      "get": {
        "tags": ["ocels"],
        "summary": "Get Object Counts",
        "operationId": "objectCount",
        "parameters": [
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { "type": "integer" },
                  "title": "Response Objectcount"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/relations/e2o": {
      "get": {
        "tags": ["ocels"],
        "summary": "Get E2O",
        "operationId": "e2o",
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["source", "target"], "type": "string" },
                { "type": "null" }
              ],
              "default": "source",
              "title": "Direction"
            }
          },
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RelationCountSummary"
                  },
                  "title": "Response E2O"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/relations/o2o": {
      "get": {
        "tags": ["ocels"],
        "summary": "Get Object Relations",
        "operationId": "o2o",
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["source", "target"], "type": "string" },
                { "type": "null" }
              ],
              "default": "source",
              "title": "Direction"
            }
          },
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RelationCountSummary"
                  },
                  "title": "Response O2O"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/filter": {
      "get": {
        "tags": ["ocels"],
        "summary": "Get Filter",
        "operationId": "getFilters",
        "parameters": [
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Filter" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/import": {
      "post": {
        "tags": ["ocels"],
        "summary": "Import OCEL 2.0 from .sqlite file",
        "operationId": "importOcel",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "[\\w\\-\\(\\)]+\\.[a-z]+",
              "description": "The name of the uploaded file",
              "title": "Name"
            },
            "description": "The name of the uploaded file"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": { "$ref": "#/components/schemas/Body_importOcel" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/ocel/default": {
      "get": {
        "tags": ["ocels"],
        "summary": "Get default OCEL metadata",
        "operationId": "getDefaultOcel",
        "parameters": [
          {
            "name": "only_latest_versions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Only Latest Versions"
            }
          },
          {
            "name": "only_preloaded",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Only Preloaded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/DefaultOCEL" },
                  "title": "Response Getdefaultocel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/import-default": {
      "post": {
        "tags": ["ocels"],
        "summary": "Import default OCEL",
        "operationId": "importDefaultOcel",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Default OCEL key",
              "examples": [
                "containerLogistics",
                "hinge",
                "orderManagement",
                "orderManagementWithDistances",
                "p2p",
                "pallet-logistics"
              ],
              "title": "Key"
            },
            "description": "Default OCEL key"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Dataset version (optional)",
              "examples": ["1.0"],
              "title": "Version"
            },
            "description": "Dataset version (optional)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ocels/download": {
      "get": {
        "tags": ["ocels"],
        "summary": "Download OCEL including app state",
        "operationId": "download_ocel_ocels_download_get",
        "parameters": [
          {
            "name": "ext",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                { "enum": [".xml", ".json", ".sqlite"], "type": "string" },
                { "type": "null" }
              ],
              "title": "Ext"
            }
          },
          {
            "name": "ocel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Ocel Id"
            }
          },
          {
            "name": "ocel_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["original", "filtered"], "type": "string" },
                { "type": "null" }
              ],
              "default": "filtered",
              "title": "Ocel Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/resources/": {
      "get": {
        "tags": ["resources"],
        "summary": "Returns all available resources",
        "operationId": "getResources",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/Resource-Output" },
                  "type": "array",
                  "title": "Response Getresources"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["resources"],
        "summary": "Adds a resource to the session",
        "operationId": "addResource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Resource-Input" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/resources/{resource_id}": {
      "get": {
        "tags": ["resources"],
        "summary": "Get Resource",
        "operationId": "get_resource_resources__resource_id__get",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Resource Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Resource-Output" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["resources"],
        "summary": "Update Resource",
        "operationId": "updateResource",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Resource Id" }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Resource-Output" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["resources"],
        "summary": "Delete Resource",
        "operationId": "deleteResource",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Resource Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/resources/{resource_id}/download": {
      "get": {
        "tags": ["resources"],
        "summary": "Download Resource",
        "operationId": "downloadResource",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Resource Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/tasks/": {
      "get": {
        "tags": ["tasks"],
        "summary": "returns all tasks of a session",
        "operationId": "getTasks",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/TaskSummary" },
                  "type": "array",
                  "title": "Response Gettasks"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "tags": ["tasks"],
        "summary": "returns the task of a given taskId",
        "operationId": "getTask",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Task Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskSummary" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Arc": {
        "properties": {
          "annotation": {
            "anyOf": [
              { "additionalProperties": true, "type": "object" },
              { "type": "null" }
            ],
            "title": "Annotation"
          },
          "source": { "type": "string", "title": "Source" },
          "target": { "type": "string", "title": "Target" },
          "variable": {
            "type": "boolean",
            "title": "Variable",
            "default": false
          }
        },
        "type": "object",
        "required": ["annotation", "source", "target"],
        "title": "Arc"
      },
      "Body_importOcel": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "An OCEL 2.0 event log (.sqlite format)"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_importOcel"
      },
      "BooleanAttribute": {
        "properties": {
          "attribute": { "type": "string", "title": "Attribute" },
          "type": { "type": "string", "const": "boolean", "title": "Type" },
          "true_count": { "type": "integer", "title": "True Count" },
          "false_count": { "type": "integer", "title": "False Count" }
        },
        "type": "object",
        "required": ["attribute", "type", "true_count", "false_count"],
        "title": "BooleanAttribute"
      },
      "DateAttribute": {
        "properties": {
          "attribute": { "type": "string", "title": "Attribute" },
          "type": { "type": "string", "const": "date", "title": "Type" },
          "min": { "type": "string", "title": "Min" },
          "max": { "type": "string", "title": "Max" }
        },
        "type": "object",
        "required": ["attribute", "type", "min", "max"],
        "title": "DateAttribute"
      },
      "Date_Distribution_Item": {
        "properties": {
          "date": { "type": "string", "title": "Date" },
          "entity_count": {
            "additionalProperties": { "type": "integer" },
            "type": "object",
            "title": "Entity Count"
          }
        },
        "type": "object",
        "required": ["date", "entity_count"],
        "title": "Date_Distribution_Item"
      },
      "DefaultOCEL": {
        "properties": {
          "key": { "type": "string", "title": "Key" },
          "name": { "type": "string", "title": "Name" },
          "version": { "type": "string", "title": "Version" },
          "file": { "type": "string", "title": "File" },
          "url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Url"
          },
          "preload": {
            "type": "boolean",
            "title": "Preload",
            "default": false
          },
          "hide": { "type": "boolean", "title": "Hide", "default": false }
        },
        "type": "object",
        "required": ["key", "name", "version", "file"],
        "title": "DefaultOCEL",
        "description": "Definition of a default OCEL on the server, for quick access. Supports pre-loading the OCEL on backend init."
      },
      "E2OCountFilterConfig": {
        "properties": {
          "source": { "type": "string", "title": "Source" },
          "target": { "type": "string", "title": "Target" },
          "mode": {
            "anyOf": [
              { "type": "string", "enum": ["include", "exclude"] },
              { "type": "null" }
            ],
            "title": "Mode",
            "default": "include"
          },
          "range": {
            "prefixItems": [
              { "anyOf": [{ "type": "integer" }, { "type": "null" }] },
              { "anyOf": [{ "type": "integer" }, { "type": "null" }] }
            ],
            "type": "array",
            "maxItems": 2,
            "minItems": 2,
            "title": "Range"
          },
          "qualifier": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Qualifier"
          },
          "type": { "type": "string", "const": "e2o_count", "title": "Type" },
          "direction": {
            "type": "string",
            "enum": ["source", "target"],
            "title": "Direction",
            "default": "source"
          }
        },
        "type": "object",
        "required": ["source", "target", "range", "type"],
        "title": "E2OCountFilterConfig"
      },
      "Edge": {
        "properties": {
          "annotation": {
            "anyOf": [
              { "additionalProperties": true, "type": "object" },
              { "type": "null" }
            ],
            "title": "Annotation"
          },
          "source": { "type": "string", "title": "Source" },
          "target": { "type": "string", "title": "Target" },
          "object_type": { "type": "string", "title": "Object Type" }
        },
        "type": "object",
        "required": ["annotation", "source", "target", "object_type"],
        "title": "Edge"
      },
      "Entity_Time_Info": {
        "properties": {
          "start_time": { "type": "string", "title": "Start Time" },
          "end_time": { "type": "string", "title": "End Time" },
          "date_distribution": {
            "items": { "$ref": "#/components/schemas/Date_Distribution_Item" },
            "type": "array",
            "title": "Date Distribution"
          }
        },
        "type": "object",
        "required": ["start_time", "end_time", "date_distribution"],
        "title": "Entity_Time_Info"
      },
      "EventAttributeFilterConfig": {
        "properties": {
          "target_type": { "type": "string", "title": "Target Type" },
          "attribute": { "type": "string", "title": "Attribute" },
          "time_range": {
            "anyOf": [
              {
                "prefixItems": [
                  { "anyOf": [{ "type": "string" }, { "type": "null" }] },
                  { "anyOf": [{ "type": "string" }, { "type": "null" }] }
                ],
                "type": "array",
                "maxItems": 2,
                "minItems": 2
              },
              { "type": "null" }
            ],
            "title": "Time Range"
          },
          "number_range": {
            "anyOf": [
              {
                "prefixItems": [
                  {
                    "anyOf": [
                      { "type": "integer" },
                      { "type": "number" },
                      { "type": "null" }
                    ]
                  },
                  {
                    "anyOf": [
                      { "type": "integer" },
                      { "type": "number" },
                      { "type": "null" }
                    ]
                  }
                ],
                "type": "array",
                "maxItems": 2,
                "minItems": 2
              },
              { "type": "null" }
            ],
            "title": "Number Range"
          },
          "values": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    { "type": "string" },
                    { "type": "integer" },
                    { "type": "number" }
                  ]
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Values"
          },
          "regex": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Regex"
          },
          "mode": {
            "anyOf": [
              { "type": "string", "enum": ["include", "exclude"] },
              { "type": "null" }
            ],
            "title": "Mode",
            "default": "include"
          },
          "type": {
            "type": "string",
            "const": "event_attribute",
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["target_type", "attribute", "type"],
        "title": "EventAttributeFilterConfig"
      },
      "EventTypeFilterConfig": {
        "properties": {
          "mode": {
            "anyOf": [
              { "type": "string", "enum": ["include", "exclude"] },
              { "type": "null" }
            ],
            "title": "Mode",
            "default": "include"
          },
          "type": { "type": "string", "const": "event_type", "title": "Type" },
          "event_types": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Event Types"
          }
        },
        "type": "object",
        "required": ["type", "event_types"],
        "title": "EventTypeFilterConfig"
      },
      "Filter": {
        "properties": {
          "pipeline": {
            "items": {
              "oneOf": [
                { "$ref": "#/components/schemas/TimeFrameFilterConfig" },
                { "$ref": "#/components/schemas/EventAttributeFilterConfig" },
                { "$ref": "#/components/schemas/ObjectAttributeFilterConfig" },
                { "$ref": "#/components/schemas/ObjectTypeFilterConfig" },
                { "$ref": "#/components/schemas/EventTypeFilterConfig" },
                { "$ref": "#/components/schemas/E2OCountFilterConfig" },
                { "$ref": "#/components/schemas/O2OCountFilterConfig" }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "e2o_count": "#/components/schemas/E2OCountFilterConfig",
                  "event_attribute": "#/components/schemas/EventAttributeFilterConfig",
                  "event_type": "#/components/schemas/EventTypeFilterConfig",
                  "o2o_count": "#/components/schemas/O2OCountFilterConfig",
                  "object_attribute": "#/components/schemas/ObjectAttributeFilterConfig",
                  "object_type": "#/components/schemas/ObjectTypeFilterConfig",
                  "time_frame": "#/components/schemas/TimeFrameFilterConfig"
                }
              }
            },
            "type": "array",
            "title": "Pipeline"
          }
        },
        "type": "object",
        "required": ["pipeline"],
        "title": "Filter"
      },
      "FloatAttribute": {
        "properties": {
          "attribute": { "type": "string", "title": "Attribute" },
          "type": { "type": "string", "const": "float", "title": "Type" },
          "min": { "type": "number", "title": "Min" },
          "max": { "type": "number", "title": "Max" }
        },
        "type": "object",
        "required": ["attribute", "type", "min", "max"],
        "title": "FloatAttribute"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IntegerAttribute": {
        "properties": {
          "attribute": { "type": "string", "title": "Attribute" },
          "type": { "type": "string", "const": "integer", "title": "Type" },
          "min": { "type": "integer", "title": "Min" },
          "max": { "type": "integer", "title": "Max" }
        },
        "type": "object",
        "required": ["attribute", "type", "min", "max"],
        "title": "IntegerAttribute"
      },
      "NominalAttribute": {
        "properties": {
          "attribute": { "type": "string", "title": "Attribute" },
          "type": { "type": "string", "const": "nominal", "title": "Type" },
          "num_unique": { "type": "integer", "title": "Num Unique" }
        },
        "type": "object",
        "required": ["attribute", "type", "num_unique"],
        "title": "NominalAttribute"
      },
      "O2OCountFilterConfig": {
        "properties": {
          "source": { "type": "string", "title": "Source" },
          "target": { "type": "string", "title": "Target" },
          "mode": {
            "anyOf": [
              { "type": "string", "enum": ["include", "exclude"] },
              { "type": "null" }
            ],
            "title": "Mode",
            "default": "include"
          },
          "range": {
            "prefixItems": [
              { "anyOf": [{ "type": "integer" }, { "type": "null" }] },
              { "anyOf": [{ "type": "integer" }, { "type": "null" }] }
            ],
            "type": "array",
            "maxItems": 2,
            "minItems": 2,
            "title": "Range"
          },
          "qualifier": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Qualifier"
          },
          "type": { "type": "string", "const": "o2o_count", "title": "Type" },
          "direction": {
            "type": "string",
            "enum": ["source", "target"],
            "title": "Direction",
            "default": "source"
          }
        },
        "type": "object",
        "required": ["source", "target", "range", "type"],
        "title": "O2OCountFilterConfig"
      },
      "ObjectActivityEdge": {
        "properties": {
          "annotation": {
            "anyOf": [
              { "additionalProperties": true, "type": "object" },
              { "type": "null" }
            ],
            "title": "Annotation"
          },
          "object_type": { "type": "string", "title": "Object Type" },
          "activity": { "type": "string", "title": "Activity" }
        },
        "type": "object",
        "required": ["annotation", "object_type", "activity"],
        "title": "ObjectActivityEdge"
      },
      "ObjectAttributeFilterConfig": {
        "properties": {
          "target_type": { "type": "string", "title": "Target Type" },
          "attribute": { "type": "string", "title": "Attribute" },
          "time_range": {
            "anyOf": [
              {
                "prefixItems": [
                  { "anyOf": [{ "type": "string" }, { "type": "null" }] },
                  { "anyOf": [{ "type": "string" }, { "type": "null" }] }
                ],
                "type": "array",
                "maxItems": 2,
                "minItems": 2
              },
              { "type": "null" }
            ],
            "title": "Time Range"
          },
          "number_range": {
            "anyOf": [
              {
                "prefixItems": [
                  {
                    "anyOf": [
                      { "type": "integer" },
                      { "type": "number" },
                      { "type": "null" }
                    ]
                  },
                  {
                    "anyOf": [
                      { "type": "integer" },
                      { "type": "number" },
                      { "type": "null" }
                    ]
                  }
                ],
                "type": "array",
                "maxItems": 2,
                "minItems": 2
              },
              { "type": "null" }
            ],
            "title": "Number Range"
          },
          "values": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    { "type": "string" },
                    { "type": "integer" },
                    { "type": "number" }
                  ]
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Values"
          },
          "regex": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Regex"
          },
          "mode": {
            "anyOf": [
              { "type": "string", "enum": ["include", "exclude"] },
              { "type": "null" }
            ],
            "title": "Mode",
            "default": "include"
          },
          "type": {
            "type": "string",
            "const": "object_attribute",
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["target_type", "attribute", "type"],
        "title": "ObjectAttributeFilterConfig"
      },
      "ObjectCentricDirectlyFollowsGraph": {
        "properties": {
          "annotation": {
            "anyOf": [
              { "additionalProperties": true, "type": "object" },
              { "type": "null" }
            ],
            "title": "Annotation"
          },
          "object_types": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Object Types"
          },
          "activities": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Activities"
          },
          "edges": {
            "items": { "$ref": "#/components/schemas/Edge" },
            "type": "array",
            "title": "Edges"
          },
          "start_activities": {
            "items": { "$ref": "#/components/schemas/ObjectActivityEdge" },
            "type": "array",
            "title": "Start Activities"
          },
          "end_activities": {
            "items": { "$ref": "#/components/schemas/ObjectActivityEdge" },
            "type": "array",
            "title": "End Activities"
          },
          "type": { "type": "string", "const": "ocdfg", "title": "Type" }
        },
        "type": "object",
        "required": [
          "annotation",
          "object_types",
          "activities",
          "edges",
          "start_activities",
          "end_activities",
          "type"
        ],
        "title": "ObjectCentricDirectlyFollowsGraph"
      },
      "ObjectCentricPetriNet": {
        "properties": {
          "annotation": {
            "anyOf": [
              { "additionalProperties": true, "type": "object" },
              { "type": "null" }
            ],
            "title": "Annotation"
          },
          "places": {
            "items": { "$ref": "#/components/schemas/Place" },
            "type": "array",
            "title": "Places"
          },
          "transitions": {
            "items": { "$ref": "#/components/schemas/Transition" },
            "type": "array",
            "title": "Transitions"
          },
          "arcs": {
            "items": { "$ref": "#/components/schemas/Arc" },
            "type": "array",
            "title": "Arcs"
          },
          "type": { "type": "string", "const": "ocpn", "title": "Type" }
        },
        "type": "object",
        "required": ["annotation", "places", "transitions", "arcs", "type"],
        "title": "ObjectCentricPetriNet"
      },
      "ObjectTypeFilterConfig": {
        "properties": {
          "mode": {
            "anyOf": [
              { "type": "string", "enum": ["include", "exclude"] },
              { "type": "null" }
            ],
            "title": "Mode",
            "default": "include"
          },
          "type": { "type": "string", "const": "object_type", "title": "Type" },
          "object_types": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Object Types"
          }
        },
        "type": "object",
        "required": ["type", "object_types"],
        "title": "ObjectTypeFilterConfig"
      },
      "OcelEntity": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "timestamp": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Timestamp"
          },
          "attributes": {
            "additionalProperties": true,
            "type": "object",
            "title": "Attributes"
          },
          "relations": {
            "additionalProperties": {
              "items": { "type": "string" },
              "type": "array"
            },
            "type": "object",
            "title": "Relations"
          }
        },
        "type": "object",
        "required": ["id", "attributes", "relations"],
        "title": "OcelEntity"
      },
      "OcelListResponse": {
        "properties": {
          "current_ocel_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Current Ocel Id"
          },
          "ocels": {
            "items": { "$ref": "#/components/schemas/OcelMetadata" },
            "type": "array",
            "title": "Ocels"
          },
          "uploading_ocels": {
            "items": { "$ref": "#/components/schemas/UploadingOcelMetadata" },
            "type": "array",
            "title": "Uploading Ocels"
          }
        },
        "type": "object",
        "required": ["current_ocel_id", "ocels", "uploading_ocels"],
        "title": "OcelListResponse"
      },
      "OcelMetadata": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "created_at": { "type": "string", "title": "Created At" },
          "extensions": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Extensions"
          }
        },
        "type": "object",
        "required": ["id", "name", "created_at", "extensions"],
        "title": "OcelMetadata"
      },
      "PaginatedResponse": {
        "properties": {
          "page": { "type": "integer", "title": "Page" },
          "page_size": { "type": "integer", "title": "Page Size" },
          "total_pages": { "type": "integer", "title": "Total Pages" },
          "total_items": { "type": "integer", "title": "Total Items" },
          "items": {
            "items": { "$ref": "#/components/schemas/OcelEntity" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "page",
          "page_size",
          "total_pages",
          "total_items",
          "items"
        ],
        "title": "PaginatedResponse"
      },
      "Place": {
        "properties": {
          "annotation": {
            "anyOf": [
              { "additionalProperties": true, "type": "object" },
              { "type": "null" }
            ],
            "title": "Annotation"
          },
          "id": { "type": "string", "title": "Id" },
          "object_type": { "type": "string", "title": "Object Type" },
          "place_type": {
            "anyOf": [{ "enum": ["sink", "source", null] }, { "type": "null" }],
            "title": "Place Type"
          }
        },
        "type": "object",
        "required": ["annotation", "id", "object_type", "place_type"],
        "title": "Place"
      },
      "RelationCountSummary": {
        "properties": {
          "qualifier": { "type": "string", "title": "Qualifier" },
          "source": { "type": "string", "title": "Source" },
          "target": { "type": "string", "title": "Target" },
          "min_count": { "type": "integer", "title": "Min Count" },
          "max_count": { "type": "integer", "title": "Max Count" },
          "sum": { "type": "integer", "title": "Sum" }
        },
        "type": "object",
        "required": [
          "qualifier",
          "source",
          "target",
          "min_count",
          "max_count",
          "sum"
        ],
        "title": "RelationCountSummary"
      },
      "Resource-Input": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "created_at": { "type": "string", "title": "Created At" },
          "source": { "type": "string", "title": "Source" },
          "meta_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Meta Data"
          },
          "entity": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ObjectCentricDirectlyFollowsGraph"
              },
              { "$ref": "#/components/schemas/ObjectCentricPetriNet" },
              { "$ref": "#/components/schemas/Totem" }
            ],
            "title": "Entity",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "ocdfg": "#/components/schemas/ObjectCentricDirectlyFollowsGraph",
                "ocpn": "#/components/schemas/ObjectCentricPetriNet",
                "totem": "#/components/schemas/Totem"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "source",
          "meta_data",
          "entity"
        ],
        "title": "Resource"
      },
      "Resource-Output": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "created_at": { "type": "string", "title": "Created At" },
          "source": { "type": "string", "title": "Source" },
          "meta_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Meta Data"
          },
          "entity": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ObjectCentricDirectlyFollowsGraph"
              },
              { "$ref": "#/components/schemas/ObjectCentricPetriNet" },
              { "$ref": "#/components/schemas/Totem" }
            ],
            "title": "Entity",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "ocdfg": "#/components/schemas/ObjectCentricDirectlyFollowsGraph",
                "ocpn": "#/components/schemas/ObjectCentricPetriNet",
                "totem": "#/components/schemas/Totem"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "source",
          "meta_data",
          "entity"
        ],
        "title": "Resource"
      },
      "TaskState": {
        "type": "string",
        "enum": [
          "PENDING",
          "STARTED",
          "SUCCESS",
          "FAILURE",
          "SKIPPED",
          "CANCELLED"
        ],
        "title": "TaskState"
      },
      "TaskSummary": {
        "properties": {
          "key": { "type": "string", "title": "Key" },
          "name": { "type": "string", "title": "Name" },
          "state": { "$ref": "#/components/schemas/TaskState" },
          "has_result": { "type": "boolean", "title": "Has Result" },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": ["key", "name", "state", "has_result", "metadata"],
        "title": "TaskSummary"
      },
      "TimeFrameFilterConfig": {
        "properties": {
          "mode": {
            "anyOf": [
              { "type": "string", "enum": ["include", "exclude"] },
              { "type": "null" }
            ],
            "title": "Mode",
            "default": "include"
          },
          "type": { "type": "string", "const": "time_frame", "title": "Type" },
          "time_range": {
            "prefixItems": [
              { "anyOf": [{ "type": "string" }, { "type": "null" }] },
              { "anyOf": [{ "type": "string" }, { "type": "null" }] }
            ],
            "type": "array",
            "maxItems": 2,
            "minItems": 2,
            "title": "Time Range"
          }
        },
        "type": "object",
        "required": ["type", "time_range"],
        "title": "TimeFrameFilterConfig"
      },
      "Totem": {
        "properties": {
          "annotation": {
            "anyOf": [
              { "additionalProperties": true, "type": "object" },
              { "type": "null" }
            ],
            "title": "Annotation"
          },
          "object_types": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Object Types"
          },
          "edges": {
            "items": { "$ref": "#/components/schemas/TotemEdge" },
            "type": "array",
            "title": "Edges"
          },
          "type": { "type": "string", "const": "totem", "title": "Type" }
        },
        "type": "object",
        "required": ["annotation", "object_types", "edges", "type"],
        "title": "Totem"
      },
      "TotemEdge": {
        "properties": {
          "annotation": {
            "anyOf": [
              { "additionalProperties": true, "type": "object" },
              { "type": "null" }
            ],
            "title": "Annotation"
          },
          "source": { "type": "string", "title": "Source" },
          "target": { "type": "string", "title": "Target" },
          "lc": {
            "type": "string",
            "enum": ["0", "1", "0...1", "1..*", "0...*"],
            "title": "Lc"
          },
          "lc_inverse": {
            "type": "string",
            "enum": ["0", "1", "0...1", "1..*", "0...*"],
            "title": "Lc Inverse"
          },
          "ec": {
            "type": "string",
            "enum": ["0", "1", "0...1", "1..*", "0...*"],
            "title": "Ec"
          },
          "ec_inverse": {
            "type": "string",
            "enum": ["0", "1", "0...1", "1..*", "0...*"],
            "title": "Ec Inverse"
          },
          "tr": {
            "type": "string",
            "enum": ["D", "Di", "I", "Ii", "P"],
            "title": "Tr"
          },
          "tr_inverse": {
            "type": "string",
            "enum": ["D", "Di", "I", "Ii", "P"],
            "title": "Tr Inverse"
          }
        },
        "type": "object",
        "required": [
          "annotation",
          "source",
          "target",
          "lc",
          "lc_inverse",
          "ec",
          "ec_inverse",
          "tr",
          "tr_inverse"
        ],
        "title": "TotemEdge"
      },
      "Transition": {
        "properties": {
          "annotation": {
            "anyOf": [
              { "additionalProperties": true, "type": "object" },
              { "type": "null" }
            ],
            "title": "Annotation"
          },
          "id": { "type": "string", "title": "Id" },
          "label": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label"
          }
        },
        "type": "object",
        "required": ["annotation", "id", "label"],
        "title": "Transition"
      },
      "UploadingOcelMetadata": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "task_id": { "type": "string", "title": "Task Id" },
          "uploaded_at": { "type": "string", "title": "Uploaded At" }
        },
        "type": "object",
        "required": ["name", "task_id", "uploaded_at"],
        "title": "UploadingOcelMetadata"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  }
}
